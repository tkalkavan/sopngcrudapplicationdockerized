{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/add-song/add-song.component.ts","webpack:///src/app/component/add-song/add-song.component.html","webpack:///src/app/component/shared/thumb/thumb.component.ts","webpack:///src/app/component/shared/thumb/thumb.component.html","webpack:///src/app/component/song-detail/song-detail.component.ts","webpack:///src/app/component/song-detail/song-detail.component.html","webpack:///src/app/component/song-list/song-list.component.ts","webpack:///src/app/component/song-list/song-list.component.html","webpack:///src/app/component/update-song/update-song.component.ts","webpack:///src/app/component/update-song/update-song.component.html","webpack:///src/app/misc/modal-basic/modal-basic.component.ts","webpack:///src/app/misc/modal-basic/modal-basic.component.html","webpack:///src/app/model/Song.ts","webpack:///src/app/service/song-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddSongComponent","songService","router","song","submitted","addSong","subscribe","data","console","log","getSongList","error","save","navigate","onSubmit","ThumbComponent","ratingClicked","thumbWidth","ratingNumber","emit","onClick","SongDetailComponent","route","snapshot","paramMap","get","getSong","SongListComponent","pageTitle","imageWidth","imageMargin","showImage","_listFilter","filteredSongs","songs","listFilter","message","filterBy","toLocaleLowerCase","filter","indexOf","deleteSong","value","doFilter","UpdateSongComponent","params","updateSong","ModalBasicComponent","modalService","closeResult","content","open","ariaLabelledBy","result","reason","getDismissReason","ESC","BACKDROP_CLICK","Song","SongService","http","baseUrl","put","post","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SongDetailComponent} from \"./component/song-detail/song-detail.component\";\nimport {SongListComponent} from \"./component/song-list/song-list.component\";\nimport {AddSongComponent} from \"./component/add-song/add-song.component\";\nimport {UpdateSongComponent} from \"./component/update-song/update-song.component\";\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'listOfSongs', pathMatch: 'full'},\n  {path: 'listOfSongs', component: SongListComponent},\n  {path: 'update/:id', component: UpdateSongComponent},\n  {path: 'song/:id', component: SongDetailComponent},\n  {path: 'add', component: AddSongComponent},\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ui-angular';\n}\n","\n<div>\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a href=\"#\" class=\"navbar-brand\">Song app</a>\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"listOfSongs\" class=\"nav-link\">Song list</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"add\" class=\"nav-link\">Add song</a>\n      </li>\n    </div>\n  </nav>\n\n  <div class=\"container mt-3\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {AddSongComponent} from './component/add-song/add-song.component';\nimport {SongDetailComponent} from './component/song-detail/song-detail.component';\nimport {SongListComponent} from './component/song-list/song-list.component';\nimport {ThumbComponent} from './component/shared/thumb/thumb.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {UpdateSongComponent} from './component/update-song/update-song.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {ModalBasicComponent} from './misc/modal-basic/modal-basic.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        AddSongComponent,\n        SongDetailComponent,\n        SongListComponent,\n        UpdateSongComponent,\n        ModalBasicComponent,\n        ThumbComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        NgbModule,\n        HttpClientModule,\n        FormsModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Song} from \"../../model/Song\";\nimport {Router} from \"@angular/router\";\nimport {SongService} from \"../../service/song-service.service\";\n\n@Component({\n  selector: 'app-add-song',\n  templateUrl: './add-song.component.html',\n  styleUrls: ['./add-song.component.css']\n})\nexport class AddSongComponent implements OnInit {\n\n\n  song: Song = new Song();\n  submitted = false;\n\n  constructor(private songService: SongService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  addSong(): void {\n    this.submitted = false;\n    this.song = new Song();\n  }\n\n  save() {\n    this.songService.addSong(this.song).subscribe(data => {\n          console.log(data)\n          this.song = new Song();\n          this.getSongList();\n        },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();\n  }\n\n\n  getSongList() {\n    this.router.navigate(['/listOfSongs']);\n  }\n}\n","<h3>Create Song</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n    <form (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label>Title</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"song.title\" name=\"title\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Album</label>\n            <input type=\"text\" class=\"form-control\" id=\"surname\" required [(ngModel)]=\"song.album\"\n                   name=\"surname\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Genre</label>\n            <input type=\"text\" class=\"form-control\" id=\"genre\" required [(ngModel)]=\"song.genre\" name=\"grade\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Artist</label>\n            <input type=\"text\" class=\"form-control\" id=\"Artist\" required [(ngModel)]=\"song.artist\" name=\"Artist\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Rating</label>\n            <input type=\"text\" class=\"form-control\" id=\"rating\" required [(ngModel)]=\"song.thumbRating\" name=\"thumbRating\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Image url</label>\n            <input type=\"text\" class=\"form-control\" id=\"image\" required [(ngModel)]=\"song.image\" name=\"image\">\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-success\">Save</button>\n    </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n    <h4>Saved successfully!</h4>\n    <button class=\"btn btn-success\" (click)=\"addSong()\">Add</button>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n\n  // tslint:disable-next-line:component-selector\n  selector: 'song-thumb',\n  templateUrl: './thumb.component.html',\n  styleUrls: ['./thumb.component.css']\n})\nexport class ThumbComponent implements OnChanges {\n\n  //[prop]=\"value\" is for object binding to properties (@Input() of an Angular component or directive or a property of a DOM element).\n  //[ratingNumber] -> song-list.component ten geliyor  [ratingNumber]=\"song.thumbRating\"\n\n  @Input() ratingNumber;\n\n\n  //song-list.component.html\n  /*\n  *  (ratingClicked)=\"onRatingClicked($event)\n  * () ----> ratingClicked forwarded to onRatingClicked(message: string): void method on song-list.component.ts\n  * */\n\n  @Output() ratingClicked: EventEmitter<string> = new EventEmitter<string>();\n\n  thumbWidth: number;\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.thumbWidth = this.ratingNumber * 95 / 5;\n  }\n\n  onClick(): void {\n   this.ratingClicked.emit(`This song has a ${this.ratingNumber} thumb rating!`);\n  }\n\n}\n","<div class=\"crop\"\n     [style.width.px]=\"thumbWidth\"\n     [title]=\"ratingNumber\"\n     (click)=\"onClick()\"\n>\n    <div class=\"thumb-container\">\n        <span class=\"fa fa-thumbs-up\"></span>\n        <span class=\"fa fa-thumbs-up\"></span>\n        <span class=\"fa fa-thumbs-up\"></span>\n        <span class=\"fa fa-thumbs-up\"></span>\n        <span class=\"fa fa-thumbs-up\"></span>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Song} from \"../../model/Song\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SongService} from \"../../service/song-service.service\";\n\n@Component({\n  selector: 'song-detail',\n  templateUrl: './song-detail.component.html',\n  styleUrls: ['./song-detail.component.css']\n})\nexport class SongDetailComponent implements OnInit {\n\n  id: String;\n  song: Song;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private songService: SongService) {\n  }\n\n  ngOnInit(): void {\n    this.song = new Song();\n\n    this.id = this.route.snapshot.paramMap.get('id');\n\n\n    this.songService.getSong(this.id)\n        .subscribe(data => {\n          console.log(data);\n          this.song = data;\n        }, error => console.log(error));\n  }\n\n  getSongList(){\n    this.router.navigate(['listOfSongs']);\n  }\n\n}\n","<h2>Song Details:</h2>\n\n<hr/>\n<div *ngIf=\"song\">\n    <div>\n        <label><b>Title:</b></label> {{song.title}}\n    </div>\n    <div>\n        <label><b>Album: </b></label> {{song.album}}\n    </div>\n    <div>\n        <label><b>Genre: </b></label> {{song.genre}}\n    </div>\n</div>\n\n<br>\n<br>\n<button (click)=\"getSongList()\" class=\"btn btn-primary\">Back to song list</button><br>\n\n","import {Component, OnInit} from '@angular/core';\nimport {SongService} from  \"../../service/song-service.service\";\nimport {Observable} from \"rxjs\";\nimport {Song} from \"../../model/Song\";\nimport {Router} from \"@angular/router\";\n\n\n@Component({\n    selector: 'song-list',\n    templateUrl: './song-list.component.html',\n    styleUrls: ['./song-list.component.css'],\n    providers: [SongService]\n})\nexport class SongListComponent implements OnInit {\n\n    pageTitle = 'Song  List';\n    imageWidth = 100;\n    imageMargin = 1;\n    showImage = true;\n    // tslint:disable-next-line:variable-name\n    _listFilter = '';\n    get listFilter(): string {\n        return this._listFilter;\n    }\n\n    filteredSongs: Song[] = [];\n    songs: Song[] = [];\n\n    set listFilter(value: string) {\n        this._listFilter = value;\n        this.filteredSongs = this.listFilter ? this.doFilter(this.listFilter) : this.songs;\n    }\n\n    song: Observable<Song[]>;\n\n    constructor(private songService: SongService, private router: Router) {\n        this.listFilter='';\n    }\n\n    /*\n    *\n    * The pipe method is for chaining observable operators,\n    *  and the subscribe is for activating the observable and listening for emitted values.\n    * */\n    ngOnInit(): void {\n\n     this.songService.getSongList().subscribe(\n         songs=>{\n             this.songs=songs;\n             this.filteredSongs=songs;\n         }\n     );\n\n    }\n    onRatingClicked(message: string): void {\n        this.pageTitle = 'Song List: ' + message;\n    }\n\n    doFilter(filterBy: string): Song[] {\n        filterBy = filterBy.toLocaleLowerCase();\n        return this.songs.filter((song: Song) =>\n            song.title.toLocaleLowerCase().indexOf(filterBy) !== -1);\n    }\n\n    //CRUD\n\n    getSongList() {\n        this.song = this.songService.getSongList();\n    }\n\n\n    toggleImage(): void {\n        this.showImage = !this.showImage;\n    }\n    deleteSong(id: string) {\n\n        this.songService.deleteSong(id).subscribe(\n            data => {\n                console.log(data);\n                this.getSongList();\n            },\n            error => console.log(error));\n    }\n\n    updateSong(id:string){\n        this.router.navigate(['update',id]);\n    }\n\n    songDetails(id: string) {\n        this.router.navigate(['song', id]);\n    }\n\n}\n","<div class='card'>\n    <div class='card-header'>\n        {{pageTitle}}\n    </div>\n    <div class='card-body'>\n        <div class=\"row\">\n            <div class=\"col-3\">\n                <input [(ngModel)]=\"listFilter\" type=\"text\" class=\"form-control\" id=\"filterInput\"\n                       placeholder=\"Type to filter\">\n            </div>\n            <div class=\"col\">\n                <div *ngIf='listFilter' class=\"form-text text-muted\">Filtered by: {{listFilter}}</div>\n            </div>\n        </div>\n        <div class='table-responsive'>\n            <table class='table  table-nonfluid'  *ngIf='songs && songs.length'>\n                <thead>\n                <tr>\n                    <th>\n                        <button class='btn btn-primary'\n                                (click)='toggleImage()'>\n                            {{showImage ? 'Hide&nbsp;' : 'Show'}} Image\n                        </button>\n                    </th>\n                    <th style=\"color:firebrick\">Title</th>\n                    <th>Artist</th>\n                    <th>Genre</th>\n                    <th>Album</th>\n                    <th>Release Date</th>\n                    <th>Rating</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr *ngFor='let song of filteredSongs'>\n                    <td>\n                        <img *ngIf='showImage'\n                             [src]='song.image'\n                             [title]='song.title'\n                             [style.width.px]='imageWidth'\n                             [style.margin.px]='imageMargin'>\n                    </td>\n                    <td>{{ song.title }}</td>\n                    <td>{{ song.artist }}</td>\n                    <td>{{ song.genre | lowercase }}</td>\n                    <td>{{ song.album }}</td>\n                    <td>{{ song.releaseDate }}</td>\n\n                    <!--\n                                        <td>{{ song. | currency:'USD':'symbol':'1.2-2' }}</td>\n                    -->\n\n\n                    <!--We are listening for the ratingClicked event raised from the thumb component.\n                    When that event triggers, we want to run the onRatingClicked() method with $event as the payload.\n                    -->\n\n\n                    <td>\n                        <song-thumb *ngIf=\"song.thumbRating\"  [ratingNumber]=\"song.thumbRating\"\n\n                                    (ratingClicked)=\"onRatingClicked($event)\">\n\n                        </song-thumb>\n                    </td>\n\n                    <td >\n                        <button (click)=\"deleteSong(song.id)\" class=\"btn btn-danger\">Delete</button>\n                        <button (click)=\"updateSong(song.id)\" class=\"btn btn-info\" style=\"margin: 5px\">Update</button>\n                        <button (click)=\"songDetails(song.id)\" class=\"btn btn-info\" style=\"margin: 5px\">\n                            Details\n                        </button>\n                    </td>\n\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SongService} from \"../../service/song-service.service\";\nimport {Song} from \"../../model/Song\";\n\n@Component({\n    selector: 'app-update-song',\n    templateUrl: './update-song.component.html',\n    styleUrls: ['./update-song.component.css']\n})\nexport class UpdateSongComponent implements OnInit {\n\n    id: String;\n    song: Song;\n\n    constructor(private route: ActivatedRoute, private router: Router,\n                private songService: SongService) {\n    }\n\n    ngOnInit(): void {\n\n        this.song = new Song();\n        this.id = this.route.snapshot.params['id'];\n\n        this.songService.getSong(this.id)\n            .subscribe(data => {\n                this.song = data;\n            }, error => console.log(error));\n    }\n\n    updateSong() {\n\n        this.songService.updateSong(this.id, this.song)\n            .subscribe(data => {\n\n                this.song = new Song();\n                this.getSongList();\n            }, error => console.log(error));\n    }\n\n    onSubmit() {\n        this.updateSong();\n    }\n\n    getSongList() {\n        this.router.navigate(['/listOfSongs']);\n    }\n\n}\n","<h3>Update song information</h3>\n<div style=\"width: 400px;\">\n    <form (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label>Fitle</label>\n\n            <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"song.title\" name=\"name\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Album</label>\n            <input type=\"text\" class=\"form-control\" id=\"surname\" required [(ngModel)]=\"song.album\" name=\"album\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Genre</label>\n            <input type=\"text\" class=\"form-control\" id=\"grade\" required [(ngModel)]=\"song.genre\" name=\"genre\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Artist</label>\n            <input type=\"text\" class=\"form-control\" id=\"artist\" required [(ngModel)]=\"song.artist\" name=\"artist\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Rating</label>\n            <input type=\"text\" class=\"form-control\" id=\"thumbRating\" required [(ngModel)]=\"song.thumbRating\" name=\"thumbRating\">\n        </div>\n\n\n\n        <div class=\"form-group\">\n            <label>Image</label>\n            <input type=\"text\" class=\"form-control\" id=\"image\" required [(ngModel)]=\"song.image\" name=\"image\">\n        </div>\n\n\n        <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'app-modal-basic',\n  templateUrl: './modal-basic.component.html',\n  styleUrls: ['./modal-basic.component.css']\n})\nexport class ModalBasicComponent implements OnInit {\n\n  closeResult = '';\n\n  constructor(private modalService: NgbModal) {}\n\n  open(content) {\n    this.modalService.open(content,\n        {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult =\n          `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<p>modal-basic works!</p>\n","export class Song {\r\n    id: string;\r\n    image: string;\r\n    title:string;\r\n    album: string;\r\n    genre: string;\r\n    artist: string;\r\n    thumbRating: number;\r\n    releaseDate: Date;\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SongService {\n  //This is mapped port:8000-> 8080\n  private baseUrl = 'http://localhost:8000/songs';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getSongList(): Observable<any> {\n    return this.http.get(this.baseUrl + '/getAllSongs/');\n  }\n\n\n  deleteSong(id: String): Observable<any> {\n    return this.http.delete(this.baseUrl + '/deleteSongById/' + id);\n  }\n\n  getSong(id: String): Observable<any> {\n    return this.http.get(this.baseUrl + '/getSong/' + id);\n  }\n\n  updateSong(id: String, song: any): Observable<any> {\n    return this.http.put(this.baseUrl + '/updateSong/' + id, song);\n\n  }\n\n  addSong(song: Object): Observable<any> {\n    return this.http.post(this.baseUrl + '/createSong/', song);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}