{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/add-song/add-song.component.ts","./src/app/component/add-song/add-song.component.html","./src/app/component/shared/thumb/thumb.component.ts","./src/app/component/shared/thumb/thumb.component.html","./src/app/component/song-detail/song-detail.component.ts","./src/app/component/song-detail/song-detail.component.html","./src/app/component/song-list/song-list.component.ts","./src/app/component/song-list/song-list.component.html","./src/app/component/update-song/update-song.component.ts","./src/app/component/update-song/update-song.component.html","./src/app/misc/modal-basic/modal-basic.component.ts","./src/app/misc/modal-basic/modal-basic.component.html","./src/app/model/Song.ts","./src/app/service/song-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SongDetailComponent} from \"./component/song-detail/song-detail.component\";\nimport {SongListComponent} from \"./component/song-list/song-list.component\";\nimport {AddSongComponent} from \"./component/add-song/add-song.component\";\nimport {UpdateSongComponent} from \"./component/update-song/update-song.component\";\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'listOfSongs', pathMatch: 'full'},\n  {path: 'listOfSongs', component: SongListComponent},\n  {path: 'update/:id', component: UpdateSongComponent},\n  {path: 'song/:id', component: SongDetailComponent},\n  {path: 'add', component: AddSongComponent},\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ui-angular';\n}\n","\n<div>\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a href=\"#\" class=\"navbar-brand\">Song app</a>\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"listOfSongs\" class=\"nav-link\">Song list</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"add\" class=\"nav-link\">Add song</a>\n      </li>\n    </div>\n  </nav>\n\n  <div class=\"container mt-3\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {AddSongComponent} from './component/add-song/add-song.component';\nimport {SongDetailComponent} from './component/song-detail/song-detail.component';\nimport {SongListComponent} from './component/song-list/song-list.component';\nimport {ThumbComponent} from './component/shared/thumb/thumb.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {UpdateSongComponent} from './component/update-song/update-song.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {ModalBasicComponent} from './misc/modal-basic/modal-basic.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        AddSongComponent,\n        SongDetailComponent,\n        SongListComponent,\n        UpdateSongComponent,\n        ModalBasicComponent,\n        ThumbComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        NgbModule,\n        HttpClientModule,\n        FormsModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Song} from \"../../model/Song\";\nimport {Router} from \"@angular/router\";\nimport {SongService} from \"../../service/song-service.service\";\n\n@Component({\n  selector: 'app-add-song',\n  templateUrl: './add-song.component.html',\n  styleUrls: ['./add-song.component.css']\n})\nexport class AddSongComponent implements OnInit {\n\n\n  song: Song = new Song();\n  submitted = false;\n\n  constructor(private songService: SongService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  addSong(): void {\n    this.submitted = false;\n    this.song = new Song();\n  }\n\n  save() {\n    this.songService.addSong(this.song).subscribe(data => {\n          console.log(data)\n          this.song = new Song();\n          this.getSongList();\n        },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();\n  }\n\n\n  getSongList() {\n    this.router.navigate(['/listOfSongs']);\n  }\n}\n","<h3>Create Song</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n    <form (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label>Title</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"song.title\" name=\"title\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Album</label>\n            <input type=\"text\" class=\"form-control\" id=\"surname\" required [(ngModel)]=\"song.album\"\n                   name=\"surname\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Genre</label>\n            <input type=\"text\" class=\"form-control\" id=\"genre\" required [(ngModel)]=\"song.genre\" name=\"grade\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Artist</label>\n            <input type=\"text\" class=\"form-control\" id=\"Artist\" required [(ngModel)]=\"song.artist\" name=\"Artist\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Rating</label>\n            <input type=\"text\" class=\"form-control\" id=\"rating\" required [(ngModel)]=\"song.thumbRating\" name=\"thumbRating\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Image url</label>\n            <input type=\"text\" class=\"form-control\" id=\"image\" required [(ngModel)]=\"song.image\" name=\"image\">\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-success\">Save</button>\n    </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n    <h4>Saved successfully!</h4>\n    <button class=\"btn btn-success\" (click)=\"addSong()\">Add</button>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n\n  // tslint:disable-next-line:component-selector\n  selector: 'song-thumb',\n  templateUrl: './thumb.component.html',\n  styleUrls: ['./thumb.component.css']\n})\nexport class ThumbComponent implements OnChanges {\n\n  //[prop]=\"value\" is for object binding to properties (@Input() of an Angular component or directive or a property of a DOM element).\n  //[ratingNumber] -> song-list.component ten geliyor  [ratingNumber]=\"song.thumbRating\"\n\n  @Input() ratingNumber;\n\n\n  //song-list.component.html\n  /*\n  *  (ratingClicked)=\"onRatingClicked($event)\n  * () ----> ratingClicked forwarded to onRatingClicked(message: string): void method on song-list.component.ts\n  * */\n\n  @Output() ratingClicked: EventEmitter<string> = new EventEmitter<string>();\n\n  thumbWidth: number;\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.thumbWidth = this.ratingNumber * 95 / 5;\n  }\n\n  onClick(): void {\n   this.ratingClicked.emit(`This song has a ${this.ratingNumber} thumb rating!`);\n  }\n\n}\n","<div class=\"crop\"\n     [style.width.px]=\"thumbWidth\"\n     [title]=\"ratingNumber\"\n     (click)=\"onClick()\"\n>\n    <div class=\"thumb-container\">\n        <span class=\"fa fa-thumbs-up\"></span>\n        <span class=\"fa fa-thumbs-up\"></span>\n        <span class=\"fa fa-thumbs-up\"></span>\n        <span class=\"fa fa-thumbs-up\"></span>\n        <span class=\"fa fa-thumbs-up\"></span>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Song} from \"../../model/Song\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SongService} from \"../../service/song-service.service\";\n\n@Component({\n  selector: 'song-detail',\n  templateUrl: './song-detail.component.html',\n  styleUrls: ['./song-detail.component.css']\n})\nexport class SongDetailComponent implements OnInit {\n\n  id: String;\n  song: Song;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private songService: SongService) {\n  }\n\n  ngOnInit(): void {\n    this.song = new Song();\n\n    this.id = this.route.snapshot.paramMap.get('id');\n\n\n    this.songService.getSong(this.id)\n        .subscribe(data => {\n          console.log(data);\n          this.song = data;\n        }, error => console.log(error));\n  }\n\n  getSongList(){\n    this.router.navigate(['listOfSongs']);\n  }\n\n}\n","<h2>Song Details:</h2>\n\n<hr/>\n<div *ngIf=\"song\">\n    <div>\n        <label><b>Title:</b></label> {{song.title}}\n    </div>\n    <div>\n        <label><b>Album: </b></label> {{song.album}}\n    </div>\n    <div>\n        <label><b>Genre: </b></label> {{song.genre}}\n    </div>\n</div>\n\n<br>\n<br>\n<button (click)=\"getSongList()\" class=\"btn btn-primary\">Back to song list</button><br>\n\n","import {Component, OnInit} from '@angular/core';\nimport {SongService} from  \"../../service/song-service.service\";\nimport {Observable} from \"rxjs\";\nimport {Song} from \"../../model/Song\";\nimport {Router} from \"@angular/router\";\n\n\n@Component({\n    selector: 'song-list',\n    templateUrl: './song-list.component.html',\n    styleUrls: ['./song-list.component.css'],\n    providers: [SongService]\n})\nexport class SongListComponent implements OnInit {\n\n    pageTitle = 'Song  List';\n    imageWidth = 100;\n    imageMargin = 1;\n    showImage = true;\n    // tslint:disable-next-line:variable-name\n    _listFilter = '';\n    get listFilter(): string {\n        return this._listFilter;\n    }\n\n    filteredSongs: Song[] = [];\n    songs: Song[] = [];\n\n    set listFilter(value: string) {\n        this._listFilter = value;\n        this.filteredSongs = this.listFilter ? this.doFilter(this.listFilter) : this.songs;\n    }\n\n    song: Observable<Song[]>;\n\n    constructor(private songService: SongService, private router: Router) {\n        this.listFilter='';\n    }\n\n    /*\n    *\n    * The pipe method is for chaining observable operators,\n    *  and the subscribe is for activating the observable and listening for emitted values.\n    * */\n    ngOnInit(): void {\n\n     this.songService.getSongList().subscribe(\n         songs=>{\n             this.songs=songs;\n             this.filteredSongs=songs;\n         }\n     );\n\n    }\n    onRatingClicked(message: string): void {\n        this.pageTitle = 'Song List: ' + message;\n    }\n\n    doFilter(filterBy: string): Song[] {\n        filterBy = filterBy.toLocaleLowerCase();\n        return this.songs.filter((song: Song) =>\n            song.title.toLocaleLowerCase().indexOf(filterBy) !== -1);\n    }\n\n    //CRUD\n\n    getSongList() {\n        this.song = this.songService.getSongList();\n    }\n\n\n    toggleImage(): void {\n        this.showImage = !this.showImage;\n    }\n    deleteSong(id: string) {\n\n        this.songService.deleteSong(id).subscribe(\n            data => {\n                console.log(data);\n                this.getSongList();\n            },\n            error => console.log(error));\n    }\n\n    updateSong(id:string){\n        this.router.navigate(['update',id]);\n    }\n\n    songDetails(id: string) {\n        this.router.navigate(['song', id]);\n    }\n\n}\n","<div class='card'>\n    <div class='card-header'>\n        {{pageTitle}}\n    </div>\n    <div class='card-body'>\n        <div class=\"row\">\n            <div class=\"col-3\">\n                <input [(ngModel)]=\"listFilter\" type=\"text\" class=\"form-control\" id=\"filterInput\"\n                       placeholder=\"Type to filter\">\n            </div>\n            <div class=\"col\">\n                <div *ngIf='listFilter' class=\"form-text text-muted\">Filtered by: {{listFilter}}</div>\n            </div>\n        </div>\n        <div class='table-responsive'>\n            <table class='table  table-nonfluid'  *ngIf='songs && songs.length'>\n                <thead>\n                <tr>\n                    <th>\n                        <button class='btn btn-primary'\n                                (click)='toggleImage()'>\n                            {{showImage ? 'Hide&nbsp;' : 'Show'}} Image\n                        </button>\n                    </th>\n                    <th style=\"color:firebrick\">Title</th>\n                    <th>Artist</th>\n                    <th>Genre</th>\n                    <th>Album</th>\n                    <th>Release Date</th>\n                    <th>Rating</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr *ngFor='let song of filteredSongs'>\n                    <td>\n                        <img *ngIf='showImage'\n                             [src]='song.image'\n                             [title]='song.title'\n                             [style.width.px]='imageWidth'\n                             [style.margin.px]='imageMargin'>\n                    </td>\n                    <td>{{ song.title }}</td>\n                    <td>{{ song.artist }}</td>\n                    <td>{{ song.genre | lowercase }}</td>\n                    <td>{{ song.album }}</td>\n                    <td>{{ song.releaseDate }}</td>\n\n                    <!--\n                                        <td>{{ song. | currency:'USD':'symbol':'1.2-2' }}</td>\n                    -->\n\n\n                    <!--We are listening for the ratingClicked event raised from the thumb component.\n                    When that event triggers, we want to run the onRatingClicked() method with $event as the payload.\n                    -->\n\n\n                    <td>\n                        <song-thumb *ngIf=\"song.thumbRating\"  [ratingNumber]=\"song.thumbRating\"\n\n                                    (ratingClicked)=\"onRatingClicked($event)\">\n\n                        </song-thumb>\n                    </td>\n\n                    <td >\n                        <button (click)=\"deleteSong(song.id)\" class=\"btn btn-danger\">Delete</button>\n                        <button (click)=\"updateSong(song.id)\" class=\"btn btn-info\" style=\"margin: 5px\">Update</button>\n                        <button (click)=\"songDetails(song.id)\" class=\"btn btn-info\" style=\"margin: 5px\">\n                            Details\n                        </button>\n                    </td>\n\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SongService} from \"../../service/song-service.service\";\nimport {Song} from \"../../model/Song\";\n\n@Component({\n    selector: 'app-update-song',\n    templateUrl: './update-song.component.html',\n    styleUrls: ['./update-song.component.css']\n})\nexport class UpdateSongComponent implements OnInit {\n\n    id: String;\n    song: Song;\n\n    constructor(private route: ActivatedRoute, private router: Router,\n                private songService: SongService) {\n    }\n\n    ngOnInit(): void {\n\n        this.song = new Song();\n        this.id = this.route.snapshot.params['id'];\n\n        this.songService.getSong(this.id)\n            .subscribe(data => {\n                this.song = data;\n            }, error => console.log(error));\n    }\n\n    updateSong() {\n\n        this.songService.updateSong(this.id, this.song)\n            .subscribe(data => {\n\n                this.song = new Song();\n                this.getSongList();\n            }, error => console.log(error));\n    }\n\n    onSubmit() {\n        this.updateSong();\n    }\n\n    getSongList() {\n        this.router.navigate(['/listOfSongs']);\n    }\n\n}\n","<h3>Update song information</h3>\n<div style=\"width: 400px;\">\n    <form (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label>Fitle</label>\n\n            <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"song.title\" name=\"name\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Album</label>\n            <input type=\"text\" class=\"form-control\" id=\"surname\" required [(ngModel)]=\"song.album\" name=\"album\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Genre</label>\n            <input type=\"text\" class=\"form-control\" id=\"grade\" required [(ngModel)]=\"song.genre\" name=\"genre\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Artist</label>\n            <input type=\"text\" class=\"form-control\" id=\"artist\" required [(ngModel)]=\"song.artist\" name=\"artist\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Rating</label>\n            <input type=\"text\" class=\"form-control\" id=\"thumbRating\" required [(ngModel)]=\"song.thumbRating\" name=\"thumbRating\">\n        </div>\n\n\n\n        <div class=\"form-group\">\n            <label>Image</label>\n            <input type=\"text\" class=\"form-control\" id=\"image\" required [(ngModel)]=\"song.image\" name=\"image\">\n        </div>\n\n\n        <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'app-modal-basic',\n  templateUrl: './modal-basic.component.html',\n  styleUrls: ['./modal-basic.component.css']\n})\nexport class ModalBasicComponent implements OnInit {\n\n  closeResult = '';\n\n  constructor(private modalService: NgbModal) {}\n\n  open(content) {\n    this.modalService.open(content,\n        {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult =\n          `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<p>modal-basic works!</p>\n","export class Song {\r\n    id: string;\r\n    image: string;\r\n    title:string;\r\n    album: string;\r\n    genre: string;\r\n    artist: string;\r\n    thumbRating: number;\r\n    releaseDate: Date;\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SongService {\n  //This is mapped port:8000-> 8080\n  private baseUrl = 'http://localhost:8000/songs';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getSongList(): Observable<any> {\n    return this.http.get(this.baseUrl + '/getAllSongs/');\n  }\n\n\n  deleteSong(id: String): Observable<any> {\n    return this.http.delete(this.baseUrl + '/deleteSongById/' + id);\n  }\n\n  getSong(id: String): Observable<any> {\n    return this.http.get(this.baseUrl + '/getSong/' + id);\n  }\n\n  updateSong(id: String, song: any): Observable<any> {\n    return this.http.put(this.baseUrl + '/updateSong/' + id, song);\n\n  }\n\n  addSong(song: Object): Observable<any> {\n    return this.http.post(this.baseUrl + '/createSong/', song);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}